;; -*- mode: emacs-lisp -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

;; My custom configuration functions
;; ---------------------------------

(defun nate/enable-secrets-directory ()
  "Add the secrets directory to the load path so we can store
   sensitive configuration data outside of VCS."
  (add-to-list 'load-path "~/.seacrest/emacs/load-path"))

(defun nate/follow-symlinks ()
  "Treat symlinks like regular files; don't ask me
   for confirmation when opening a symlink file."
  (setq vc-follow-symlinks t))

;; TODO This makes it really hard to write English prose such as documentation
;;      as the combination of frequent saves and this behavior is painful.
;;      Perhaps we can condition this around the current mode and have it not
;;      do anything for Markdown and Org modes?
(defun nate/clean-whitespace-on-save ()
  "Remove trailing whitespace and trailing blank lines on file save."
  (add-hook 'before-save-hook
            (lambda ()
              (let ((whitespace-style '(trailing empty)))
                (whitespace-cleanup)))))

(defun nate/configure-erc ()
  "Configure IRC. To connect to all servers, call `M-x nate/irc-jack-in'."
  (setq erc-nick "nwolfe"
        erc-user-full-name "Nate Wolfe"
        erc-prompt-for-nickserv-password nil
        erc-hide-list '("JOIN" "NICK" "PART" "QUIT" "MODE")
        erc-autojoin-channels-alist
        '(("1.0.0" ;; irc.gitter.im
           "#syl20bnr/spacemacs")
          ("freenode"
           "#puppet" "#puppet-dev" "#trapperkeeper"
           "#emacs" "#clojure" "#reddit-cyberpunk")
          ("quakenet"
           "#rgrd")))

  ;; Don't start buffers in insert mode
  (setq evil-normal-state-modes '(erc-mode))

  ;; Put the server connect calls into a function so they
  ;; aren't called at Emacs startup. I have to call it manually.
  (defun nate/irc-jack-in ()
    "Connect to all of my IRC servers."
    (interactive)
    (erc-tls :server "irc.gitter.im" :password nil)
    (erc :server "irc.freenode.net")
    (erc :server "irc.quakenet.org")))

(defun nate/configure-paradox ()
  "Configuration for Paradox package manager. GitHub token
   is saved in ~/.seacrest/emacs/load-path/pinit-paradox.el"
  (require 'pinit-paradox)
  (setq paradox-automatically-star nil))

(defun nate/configure-powerline ()
  ;; Turn off the separator for now - there's some UI
  ;; issue causing the separators to look strange
  (setq powerline-default-separator 'nil))

(defun nate/configure-magit ()
  ;; Tell magit I've seen all of its warnings from the new version.
  (setq magit-last-seen-setup-instructions "1.4.0"))

(defun nate/configure-projectile ()
  (setq projectile-switch-project-action 'projectile-recentf))

(defun nate/configure-deft ()
  (setq deft-directory "~/notes")
  (setq deft-extension "org"))

;; Spacemacs configuration functions
;; ---------------------------------

(defun dotspacemacs/layers ()
  "Configuration Layers declaration."
  (setq-default
   ;; List of additional paths where to look for configuration layers.
   ;; Paths must have a trailing slash (ie. `~/.mycontribs/')
   dotspacemacs-configuration-layer-path '("~/.dotfiles/spacemacs-layers/")

   ;; List of configuration layers to load. If it is the symbol `all' instead
   ;; of a list then all discovered layers will be installed.
   dotspacemacs-configuration-layers
   '(
     auto-completion
     better-defaults
     (clojure :variables
              clojure-enable-fancify-symbols t)
     (colors :variables
             colors-enable-rainbow-identifiers t)
     deft
     emacs-lisp
     erc
     extra-langs
     eyebrowse
     git
     github
     markdown
     nwolfe
     org
     osx
     puppet
     (shell :variables
            shell-default-shell 'eshell)
     spotify
     syntax-checking
     )

   ;; List of additional packages that will be installed without being wrapped
   ;; in a layer. If you need some configuration for these packages then
   ;; consider creating a layer. You can also put the configuration in
   ;; `dotspacemacs/config'.
   dotspacemacs-additional-packages '()

   ;; A list of packages and/or extensions that will not be install and loaded.
   dotspacemacs-excluded-packages '()

   ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
   ;; are declared in a layer which is not a member of
   ;; the list `dotspacemacs-configuration-layers'
   dotspacemacs-delete-orphan-packages t))

(defun dotspacemacs/init ()
  "Initialization function. This function is called at the very startup of
   Spacemacs initialization before layers configuration."
  ;; This setq-default sexp is an exhaustive list of all the supported
  ;; spacemacs settings.
  (setq-default
   ;; Either `vim' or `emacs'. Evil is always enabled but if the variable
   ;; is `emacs' then the `holy-mode' is enabled at startup.
   dotspacemacs-editing-style 'vim

   ;; If non nil output loading progress in `*Messages*' buffer.
   dotspacemacs-verbose-loading nil

   ;; Specify the startup banner. Default value is `official', it displays
   ;; the official spacemacs logo. An integer value is the index of text
   ;; banner, `random' chooses a random text banner in `core/banners'
   ;; directory. A string value must be a path to a .PNG file.
   ;; If the value is nil then no banner is displayed.
   dotspacemacs-startup-banner 'official

   ;; t if you always want to see the changelog at startup
   dotspacemacs-always-show-changelog t

   ;; List of items to show in the startup buffer. if nil it is disabled.
   ;; Possible values are: `recents', `bookmarks', `projects'.
   dotspacemacs-startup-lists '(recents projects)

   ;; List of themes, the first of the list is loaded when spacemacs starts.
   ;; Press <SPC> T n to cycle to the next theme in the list (works great
   ;; with 2 themes variants, one dark and one light)
   dotspacemacs-themes '(monokai solarized-light solarized-dark leuven zenburn)

   ;; If non nil the cursor color matches the state color.
   dotspacemacs-colorize-cursor-according-to-state t

   ;; Default font. `powerline-scale' allows to quickly tweak the mode-line
   ;; size to make separators look not too crappy.
   dotspacemacs-default-font '("Source Code Pro"
                               :size 14
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)

   ;; The leader key
   dotspacemacs-leader-key "SPC"

   ;; The leader key accessible in `emacs state' and `insert state'
   dotspacemacs-emacs-leader-key "M-m"

   ;; Major mode leader key is a shortcut key which is the equivalent of
   ;; pressing `<leader> m'
   dotspacemacs-major-mode-leader-key ","

   ;; Major mode leader accessible in `emacs state' and `insert state'
   dotspacemacs-major-mode-emacs-leader-key "C-M-m"

   ;; The command key used for Evil commands (ex-commands) and
   ;; Emacs commands (M-x).
   ;; By default the command key is `:' so ex-commands are executed like in Vim
   ;; with `:' and Emacs commands are executed with `<leader> :'.
   dotspacemacs-command-key ":"

   ;; Location where to auto-save files. Possible values are `original' to
   ;; auto-save the file in-place, `cache' to auto-save the file to another
   ;; file stored in the cache directory, and `nil' to disable auto-saving.
   ;; Default value is `cache'.
   dotspacemacs-auto-save-file-location 'cache

   ;; If non nil then `ido' replaces `helm' for some commands. For now only
   ;; `find-files' (SPC f f) is replaced.
   dotspacemacs-use-ido nil

   ;; If non nil the paste micro-state is enabled. While enabled pressing `p'
   ;; several times cycles between the kill ring content.
   dotspacemacs-enable-paste-micro-state nil

   ;; Guide-key delay in seconds. The Guide-key is the popup buffer listing
   ;; the commands bound to the current keystrokes.
   dotspacemacs-guide-key-delay 0.4

   ;; If non nil a progress bar is displayed when spacemacs is loading. This
   ;; may increase the boot time on some systems and emacs builds, set it to
   ;; nil to boost the loading time.
   dotspacemacs-loading-progress-bar t

   ;; If non nil the frame is fullscreen when Emacs starts up (Emacs 24.4+ only).
   dotspacemacs-fullscreen-at-startup nil

   ;; If non nil `spacemacs/toggle-fullscreen' will not use native fullscreen.
   ;; Use to disable fullscreen animations in OSX."
   dotspacemacs-fullscreen-use-non-native nil

   ;; If non nil the frame is maximized when Emacs starts up (Emacs 24.4+ only).
   ;; Takes effect only if `dotspacemacs-fullscreen-at-startup' is nil.
   dotspacemacs-maximized-at-startup nil

   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's active or selected.
   ;; Transparency can be toggled through `toggle-transparency'.
   dotspacemacs-active-transparency 90

   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's inactive or deselected.
   ;; Transparency can be toggled through `toggle-transparency'.
   dotspacemacs-inactive-transparency 90

   ;; If non nil unicode symbols are displayed in the mode line (e.g. for lighters)
   dotspacemacs-mode-line-unicode-symbols t

   ;; If non nil smooth scrolling (native-scrolling) is enabled. Smooth
   ;; scrolling overrides the default behavior of Emacs which recenters the
   ;; point when it reaches the top or bottom of the screen
   dotspacemacs-smooth-scrolling t

   ;; If non-nil smartparens-strict-mode will be enabled in programming modes.
   dotspacemacs-smartparens-strict-mode t

   ;; Select a scope to highlight delimeters. Possible values are `all',
   ;; `current', or `nil'. Default is `all'.
   dotspacemacs-highlight-delimeters 'all

   ;; If non nil advises quit functions to keep server open when quitting.
   dotspacemacs-persistent-server nil

   ;; List of search tool executable names. Spacemacs uses the first installed
   ;; tool of the list. Supported tools are `ag', `pt', `ack' and `grep'.
   dotspacemacs-search-tools '("ag" "pt" "ack" "grep")

   ;; The default package repository used if no explicit repository has been
   ;; specified with an installed package.
   ;; Not used for now.
   dotspacemacs-default-package-repository nil)

  ;; User initialization goes below

  (nate/enable-secrets-directory))

(defun dotspacemacs/config ()
  "Configuration function. This function is called at the very end of Spacemacs
   initialization after layers configuration."
  ;; (nate/clean-whitespace-on-save)
  (nate/follow-symlinks)
  (nate/configure-erc)
  (nate/configure-paradox)
  (nate/configure-powerline)
  (nate/configure-magit)
  (nate/configure-projectile)
  (nate/configure-deft))

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
