#!/usr/bin/env bash
#
# Run from the root of a Git repo to add any number of pre-commit
# hooks.
#
# Creates a special hook runner file at .git/hooks/pre-commit that
# executes all hook files listed in .git/hooks/pre-commit-hooks.

# Base name of hook file to install (usually via tab-completion)
HOOK=$1

if [ -z $HOOK ]; then
    echo "Hook file required"
    exit 1
fi

# Full path to hook file under dotfiles repo
newhook=$DOTFILES/git/hooks/pre-commit/$HOOK

if [ ! -f $newhook ]; then
    echo "Hook '$HOOK' not found"
    exit 1
fi

if [ ! -d .git ]; then
    echo "Must be at root of git repo"
    exit 1
fi

# Special hook runner
hookfile=$PWD/.git/hooks/pre-commit

# List of actual pre-commit hooks the special runner executes
hooks=$PWD/.git/hooks/pre-commit-hooks

# Install special pre-commit composite file if not already there
if [ -f $hookfile ]; then
    if ! grep -q "LABEL: pre-commit-composite-file" $hookfile; then
        echo "Unknown pre-commit hook already exists"
        exit 1
    fi
else
    cp $DOTFILES/git/hooks/pre-commits $hookfile
    echo "Created $hookfile"
fi

# Check if hook is already installed
if test -s $hooks && grep -q "$newhook" $hooks; then
    echo "Hook '$HOOK' already installed in $hooks"
    exit 0
fi

# Append the new hook to the file listing all the hooks
echo $newhook >> $hooks

echo "Added $newhook to $hooks"
