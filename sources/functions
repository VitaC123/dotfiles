#!/bin/sh

# Adds Facter and Puppet to the RUBYLIB and PATH for running Puppet via CLI.
#
# Arguments:
#   $1  Location of Puppet repository; use '.' for current working directory.
#       Defaults to '$PUPPETLABS/puppet'.
#
# Examples:
#   > puppet-env .
#   Exported RUBYLIB, PATH
#   > puppet master --configprint confdir
puppet-env() {
    if [[ "$1" == "." ]]; then
        PUPPET_HOME=$PWD
    else
        PUPPET_HOME=${1:-$PUPPETLABS/puppet}
    fi
    FACTER_HOME=$PUPPETLABS/facter
    export RUBYLIB=$PUPPET_HOME/lib:$FACTER_HOME/lib
    export PATH=$PATH:$PUPPET_HOME/bin:$FACTER_HOME/bin
    echo "Exported RUBYLIB, PATH"
}

# Exports CACERT, CERT, and KEY for use with curl.
#
# Arguments:
#   $1  Confdir to search under, one of 'master', 'server', or 'agent'.
#       Defaults to 'master'.
#   $2  Subject name for certificate and key. Defaults to 'localhost'.
#
# Examples:
#   > puppet-ssl-env master localhost
#   Exported CACERT, CERT, KEY for localhost
#   > curl --cacert CACERT --cert CERT --key KEY https://localhost:8140/...
puppet-ssl-env() {
    MODE=${1:-'master'}
    SUBJECT=${2:-'localhost'}
    export CACERT=$PUPPETLABS_CONF/$MODE/conf/ssl/certs/ca.pem
    export CERT=$PUPPETLABS_CONF/$MODE/conf/ssl/certs/$SUBJECT.pem
    export KEY=$PUPPETLABS_CONF/$MODE/conf/ssl/private_keys/$SUBJECT.pem
    echo "Exported CACERT, CERT, KEY for $SUBJECT"
}

# Exports top-level directories CODEDIR, CONFDIR, VARDIR, RUNDIR, and LOGDIR
# for use with various Puppet CLI tools.
#
# Arguments:
#   $1  Directories for one of 'master', 'server', 'agent'
#
# Examples:
#   > puppet-cli-env
#   Exported CODEDIR, CONFDIR, VARDIR, RUNDIR, LOGDIR
#   > puppet cert list --codedir $CODEDIR --confdir $CONFDIR --vardir $VARDIR ...
puppet-cli-env() {
    MODE=${1:-'master'}
    export CODEDIR=$PUPPETLABS_CONF/$MODE/code
    export CONFDIR=$PUPPETLABS_CONF/$MODE/conf
    export VARDIR=$PUPPETLABS_CONF/$MODE/var
    export RUNDIR=$VARDIR/run
    export LOGDIR=$VARDIR/log
    echo "Exported CODEDIR, CONFDIR, VARDIR, RUNDIR, LOGDIR"
}

# Deletes the SSLDIR for master, server, or agent.
#
# Arguments:
#   $1  One of 'master', 'server', or 'agent'.
remove-ssl() {
    MODE=${1:-'master'}
    rm -rf $PUPPETLABS_CONF/$MODE/conf/ssl
}

# Go to the top-level configuration directory for the master, server, or agent.
#
# Arguments:
#   $1  One of 'master', 'server', or 'agent'.
pconf() {
    MODE=${1:-'..'}
    cd $PUPPETLABS_CONF/$MODE/conf
}
